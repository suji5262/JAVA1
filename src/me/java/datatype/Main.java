package me.java.datatype;

public class Main {
    public static void main(String[] args) {
        // 리터럴 (literal) : 데이터 수
        //-----------------------------------
        //자료형 (datatype)
        // 밑에 있는 것 - 원시 자료형(primitive type) - 스택 공간
        // int(4byte-32bit)ㄱ o 아니면 1  -> -2^31 ~ 2^31-1 (반은 양수부/ 반은 음수부)
        // ------ ------ ------ ------ 2^32 를 저장할 수 있다
        // float(4byte)-짦은 실수,
        // double(8)-긴 실수,
        // char(2)-문자,
        //----------------------------------------
        // 참조형 (reference type) -힙 공간
        // String(0)-문자열 - 대문자로 시작
        //-----------------------------------------------
        // 1byte = 8bit
        // 파이썬 i = 10 지정이 x

        // 작은 발은 큰 신발에 들어갈수 있음
        // 작은 리터럴은 큰 변수공간엔 들어갈 수 있음
        // 반대는 왜?
        byte b = 10; //1바이트 = 4바이트 ->바이트로 줄여서 - 내부적으로 캐스팅
        // byte b = (byte) 10000; type casting
        short s = 10; // 바이트와 쇼트는 범위를 벗어나면 오류가 남
        int i = 10; // *정수의 기본 단위*
        long l = 10; //8바이트 = 4바이트/ promotion
        float f = 3.14f; //f = 4바이트
        double d = 3.14; // *실수의 기본 단위*
        // 리터널도 데이터 타입이 존재함

        // 쓰레기값 예제
        byte var1 = 125; // -128 ~127 -> 이 공간에서 로테이션을 돌아 - 유효범위가 부족해 잘못된 값이 나옴
        int var2 = 125; // 범위 값 안에 순환

        for (int k = 0; k < 5; k ++) {
            var1++; // var1 = var1 + 1
            var2++; // var2 = var2 + 1
            System.out.println("var1: " + var1 + "\t" + "var2: " + var2); // 프로모션이 일어남 ->

            System.out.println("var2 : " + var2); // var2 : 130 (promotion)
            // 문자열 + 문자열 = 문자열의 결합 "a" + "b" = "ab"
            // 문자열 + 정수 = 문자열의 결합 "a" + 130 = "a130"
            //"a" + 130 -> 데이터 타입이 다름 -> "a" + "130" = "a130" 으로 -> 문자열의 결합처럼 출력 (프로모션)

        }
    }
}












